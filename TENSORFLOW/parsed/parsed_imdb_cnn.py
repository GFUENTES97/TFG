Module(body=[
  Expr(value=Str(s='\n#This example demonstrates the use of Convolution1D for text classification.\n\nGets to 0.89 test accuracy after 2 epochs. </br>\n90s/epoch on Intel i5 2.4Ghz CPU. </br>\n10s/epoch on Tesla K40 GPU.\n')),
  ImportFrom(
    module='__future__',
    names=[alias(
      name='print_function',
      asname=None)],
    level=0),
  ImportFrom(
    module='keras.preprocessing',
    names=[alias(
      name='sequence',
      asname=None)],
    level=0),
  ImportFrom(
    module='keras.models',
    names=[alias(
      name='Sequential',
      asname=None)],
    level=0),
  ImportFrom(
    module='keras.layers',
    names=[
      alias(
        name='Dense',
        asname=None),
      alias(
        name='Dropout',
        asname=None),
      alias(
        name='Activation',
        asname=None)],
    level=0),
  ImportFrom(
    module='keras.layers',
    names=[alias(
      name='Embedding',
      asname=None)],
    level=0),
  ImportFrom(
    module='keras.layers',
    names=[
      alias(
        name='Conv1D',
        asname=None),
      alias(
        name='GlobalMaxPooling1D',
        asname=None)],
    level=0),
  ImportFrom(
    module='keras.datasets',
    names=[alias(
      name='imdb',
      asname=None)],
    level=0),
  Assign(
    targets=[Name(
      id='max_features',
      ctx=Store())],
    value=Num(n=5000)),
  Assign(
    targets=[Name(
      id='maxlen',
      ctx=Store())],
    value=Num(n=400)),
  Assign(
    targets=[Name(
      id='batch_size',
      ctx=Store())],
    value=Num(n=32)),
  Assign(
    targets=[Name(
      id='embedding_dims',
      ctx=Store())],
    value=Num(n=50)),
  Assign(
    targets=[Name(
      id='filters',
      ctx=Store())],
    value=Num(n=250)),
  Assign(
    targets=[Name(
      id='kernel_size',
      ctx=Store())],
    value=Num(n=3)),
  Assign(
    targets=[Name(
      id='hidden_dims',
      ctx=Store())],
    value=Num(n=250)),
  Assign(
    targets=[Name(
      id='epochs',
      ctx=Store())],
    value=Num(n=2)),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[Str(s='Loading data...')],
    keywords=[])),
  Assign(
    targets=[Tuple(
      elts=[
        Tuple(
          elts=[
            Name(
              id='x_train',
              ctx=Store()),
            Name(
              id='y_train',
              ctx=Store())],
          ctx=Store()),
        Tuple(
          elts=[
            Name(
              id='x_test',
              ctx=Store()),
            Name(
              id='y_test',
              ctx=Store())],
          ctx=Store())],
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='imdb',
          ctx=Load()),
        attr='load_data',
        ctx=Load()),
      args=[],
      keywords=[keyword(
        arg='num_words',
        value=Name(
          id='max_features',
          ctx=Load()))])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Call(
        func=Name(
          id='len',
          ctx=Load()),
        args=[Name(
          id='x_train',
          ctx=Load())],
        keywords=[]),
      Str(s='train sequences')],
    keywords=[])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Call(
        func=Name(
          id='len',
          ctx=Load()),
        args=[Name(
          id='x_test',
          ctx=Load())],
        keywords=[]),
      Str(s='test sequences')],
    keywords=[])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[Str(s='Pad sequences (samples x time)')],
    keywords=[])),
  Assign(
    targets=[Name(
      id='x_train',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='sequence',
          ctx=Load()),
        attr='pad_sequences',
        ctx=Load()),
      args=[Name(
        id='x_train',
        ctx=Load())],
      keywords=[keyword(
        arg='maxlen',
        value=Name(
          id='maxlen',
          ctx=Load()))])),
  Assign(
    targets=[Name(
      id='x_test',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='sequence',
          ctx=Load()),
        attr='pad_sequences',
        ctx=Load()),
      args=[Name(
        id='x_test',
        ctx=Load())],
      keywords=[keyword(
        arg='maxlen',
        value=Name(
          id='maxlen',
          ctx=Load()))])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Str(s='x_train shape:'),
      Attribute(
        value=Name(
          id='x_train',
          ctx=Load()),
        attr='shape',
        ctx=Load())],
    keywords=[])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Str(s='x_test shape:'),
      Attribute(
        value=Name(
          id='x_test',
          ctx=Load()),
        attr='shape',
        ctx=Load())],
    keywords=[])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[Str(s='Build model...')],
    keywords=[])),
  Assign(
    targets=[Name(
      id='model',
      ctx=Store())],
    value=Call(
      func=Name(
        id='Sequential',
        ctx=Load()),
      args=[],
      keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='Embedding',
        ctx=Load()),
      args=[
        Name(
          id='max_features',
          ctx=Load()),
        Name(
          id='embedding_dims',
          ctx=Load())],
      keywords=[keyword(
        arg='input_length',
        value=Name(
          id='maxlen',
          ctx=Load()))])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='Dropout',
        ctx=Load()),
      args=[Num(n=0.2)],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='Conv1D',
        ctx=Load()),
      args=[
        Name(
          id='filters',
          ctx=Load()),
        Name(
          id='kernel_size',
          ctx=Load())],
      keywords=[
        keyword(
          arg='padding',
          value=Str(s='valid')),
        keyword(
          arg='activation',
          value=Str(s='relu')),
        keyword(
          arg='strides',
          value=Num(n=1))])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='GlobalMaxPooling1D',
        ctx=Load()),
      args=[],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='Dense',
        ctx=Load()),
      args=[Name(
        id='hidden_dims',
        ctx=Load())],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='Dropout',
        ctx=Load()),
      args=[Num(n=0.2)],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='Activation',
        ctx=Load()),
      args=[Str(s='relu')],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='Dense',
        ctx=Load()),
      args=[Num(n=1)],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Name(
        id='Activation',
        ctx=Load()),
      args=[Str(s='sigmoid')],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='compile',
      ctx=Load()),
    args=[],
    keywords=[
      keyword(
        arg='loss',
        value=Str(s='binary_crossentropy')),
      keyword(
        arg='optimizer',
        value=Str(s='adam')),
      keyword(
        arg='metrics',
        value=List(
          elts=[Str(s='accuracy')],
          ctx=Load()))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='fit',
      ctx=Load()),
    args=[
      Name(
        id='x_train',
        ctx=Load()),
      Name(
        id='y_train',
        ctx=Load())],
    keywords=[
      keyword(
        arg='batch_size',
        value=Name(
          id='batch_size',
          ctx=Load())),
      keyword(
        arg='epochs',
        value=Name(
          id='epochs',
          ctx=Load())),
      keyword(
        arg='validation_data',
        value=Tuple(
          elts=[
            Name(
              id='x_test',
              ctx=Load()),
            Name(
              id='y_test',
              ctx=Load())],
          ctx=Load()))]))])