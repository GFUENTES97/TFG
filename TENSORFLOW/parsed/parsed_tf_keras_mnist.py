Module(body=[
  Import(names=[alias(
    name='tensorflow',
    asname='tf')]),
  ImportFrom(
    module='tensorflow.keras',
    names=[alias(
      name='layers',
      asname=None)],
    level=0),
  ImportFrom(
    module='tensorflow.keras',
    names=[alias(
      name='models',
      asname=None)],
    level=0),
  ImportFrom(
    module='tensorflow.keras.utils',
    names=[alias(
      name='to_categorical',
      asname=None)],
    level=0),
  ImportFrom(
    module='tensorflow.keras',
    names=[alias(
      name='backend',
      asname='K')],
    level=0),
  Import(names=[alias(
    name='argparse',
    asname=None)]),
  Import(names=[alias(
    name='numpy',
    asname='np')]),
  Import(names=[alias(
    name='time',
    asname=None)]),
  Assign(
    targets=[Name(
      id='parser',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='argparse',
          ctx=Load()),
        attr='ArgumentParser',
        ctx=Load()),
      args=[],
      keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--epochs')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='int',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=40))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--batch_size')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='int',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=128))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--learning_rate')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='float',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=0.001))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--path_data')],
    keywords=[keyword(
      arg='default',
      value=Str(s='./mnist.npz'))])),
  Assign(
    targets=[Name(
      id='args',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='parser',
          ctx=Load()),
        attr='parse_args',
        ctx=Load()),
      args=[],
      keywords=[])),
  Assign(
    targets=[Name(
      id='batch_size',
      ctx=Store())],
    value=Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='batch_size',
      ctx=Load())),
  Assign(
    targets=[Name(
      id='epochs',
      ctx=Store())],
    value=Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='epochs',
      ctx=Load())),
  Assign(
    targets=[Name(
      id='lr',
      ctx=Store())],
    value=Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='learning_rate',
      ctx=Load())),
  Assign(
    targets=[Name(
      id='path',
      ctx=Store())],
    value=Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='path_data',
      ctx=Load())),
  With(
    items=[withitem(
      context_expr=Call(
        func=Attribute(
          value=Name(
            id='np',
            ctx=Load()),
          attr='load',
          ctx=Load()),
        args=[Name(
          id='path',
          ctx=Load())],
        keywords=[]),
      optional_vars=Name(
        id='f',
        ctx=Store()))],
    body=[
      Assign(
        targets=[Tuple(
          elts=[
            Name(
              id='train_images',
              ctx=Store()),
            Name(
              id='train_labels',
              ctx=Store())],
          ctx=Store())],
        value=Tuple(
          elts=[
            Subscript(
              value=Name(
                id='f',
                ctx=Load()),
              slice=Index(value=Str(s='x_train')),
              ctx=Load()),
            Subscript(
              value=Name(
                id='f',
                ctx=Load()),
              slice=Index(value=Str(s='y_train')),
              ctx=Load())],
          ctx=Load())),
      Assign(
        targets=[Tuple(
          elts=[
            Name(
              id='test_images',
              ctx=Store()),
            Name(
              id='test_labels',
              ctx=Store())],
          ctx=Store())],
        value=Tuple(
          elts=[
            Subscript(
              value=Name(
                id='f',
                ctx=Load()),
              slice=Index(value=Str(s='x_test')),
              ctx=Load()),
            Subscript(
              value=Name(
                id='f',
                ctx=Load()),
              slice=Index(value=Str(s='y_test')),
              ctx=Load())],
          ctx=Load()))]),
  Assign(
    targets=[Name(
      id='train_images',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='train_images',
          ctx=Load()),
        attr='reshape',
        ctx=Load()),
      args=[Tuple(
        elts=[
          Num(n=60000),
          Num(n=28),
          Num(n=28),
          Num(n=1)],
        ctx=Load())],
      keywords=[])),
  Assign(
    targets=[Name(
      id='train_images',
      ctx=Store())],
    value=BinOp(
      left=Call(
        func=Attribute(
          value=Name(
            id='train_images',
            ctx=Load()),
          attr='astype',
          ctx=Load()),
        args=[Str(s='float32')],
        keywords=[]),
      op=Div(),
      right=Num(n=255))),
  Assign(
    targets=[Name(
      id='test_images',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='test_images',
          ctx=Load()),
        attr='reshape',
        ctx=Load()),
      args=[Tuple(
        elts=[
          Num(n=10000),
          Num(n=28),
          Num(n=28),
          Num(n=1)],
        ctx=Load())],
      keywords=[])),
  Assign(
    targets=[Name(
      id='test_images',
      ctx=Store())],
    value=BinOp(
      left=Call(
        func=Attribute(
          value=Name(
            id='test_images',
            ctx=Load()),
          attr='astype',
          ctx=Load()),
        args=[Str(s='float32')],
        keywords=[]),
      op=Div(),
      right=Num(n=255))),
  Assign(
    targets=[Name(
      id='train_labels',
      ctx=Store())],
    value=Call(
      func=Name(
        id='to_categorical',
        ctx=Load()),
      args=[Name(
        id='train_labels',
        ctx=Load())],
      keywords=[])),
  Assign(
    targets=[Name(
      id='test_labels',
      ctx=Store())],
    value=Call(
      func=Name(
        id='to_categorical',
        ctx=Load()),
      args=[Name(
        id='test_labels',
        ctx=Load())],
      keywords=[])),
  Assign(
    targets=[Name(
      id='model',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='models',
          ctx=Load()),
        attr='Sequential',
        ctx=Load()),
      args=[],
      keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Attribute(
        value=Name(
          id='layers',
          ctx=Load()),
        attr='Conv2D',
        ctx=Load()),
      args=[
        Num(n=32),
        Tuple(
          elts=[
            Num(n=5),
            Num(n=5)],
          ctx=Load())],
      keywords=[
        keyword(
          arg='activation',
          value=Str(s='relu')),
        keyword(
          arg='input_shape',
          value=Tuple(
            elts=[
              Num(n=28),
              Num(n=28),
              Num(n=1)],
            ctx=Load()))])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Attribute(
        value=Name(
          id='layers',
          ctx=Load()),
        attr='MaxPooling2D',
        ctx=Load()),
      args=[Tuple(
        elts=[
          Num(n=2),
          Num(n=2)],
        ctx=Load())],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Attribute(
        value=Name(
          id='layers',
          ctx=Load()),
        attr='Conv2D',
        ctx=Load()),
      args=[
        Num(n=64),
        Tuple(
          elts=[
            Num(n=5),
            Num(n=5)],
          ctx=Load())],
      keywords=[keyword(
        arg='activation',
        value=Str(s='relu'))])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Attribute(
        value=Name(
          id='layers',
          ctx=Load()),
        attr='MaxPooling2D',
        ctx=Load()),
      args=[Tuple(
        elts=[
          Num(n=2),
          Num(n=2)],
        ctx=Load())],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Attribute(
        value=Name(
          id='layers',
          ctx=Load()),
        attr='Flatten',
        ctx=Load()),
      args=[],
      keywords=[])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='add',
      ctx=Load()),
    args=[Call(
      func=Attribute(
        value=Name(
          id='layers',
          ctx=Load()),
        attr='Dense',
        ctx=Load()),
      args=[Num(n=10)],
      keywords=[keyword(
        arg='activation',
        value=Str(s='softmax'))])],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='summary',
      ctx=Load()),
    args=[],
    keywords=[])),
  Assign(
    targets=[Name(
      id='opt',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Name(
              id='tf',
              ctx=Load()),
            attr='keras',
            ctx=Load()),
          attr='optimizers',
          ctx=Load()),
        attr='SGD',
        ctx=Load()),
      args=[Name(
        id='lr',
        ctx=Load())],
      keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='compile',
      ctx=Load()),
    args=[],
    keywords=[
      keyword(
        arg='loss',
        value=Str(s='categorical_crossentropy')),
      keyword(
        arg='optimizer',
        value=Name(
          id='opt',
          ctx=Load())),
      keyword(
        arg='metrics',
        value=List(
          elts=[Str(s='accuracy')],
          ctx=Load()))])),
  Assign(
    targets=[Name(
      id='time1',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='time',
          ctx=Load()),
        attr='time',
        ctx=Load()),
      args=[],
      keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='fit',
      ctx=Load()),
    args=[
      Name(
        id='train_images',
        ctx=Load()),
      Name(
        id='train_labels',
        ctx=Load())],
    keywords=[
      keyword(
        arg='batch_size',
        value=Name(
          id='batch_size',
          ctx=Load())),
      keyword(
        arg='epochs',
        value=Name(
          id='epochs',
          ctx=Load()))])),
  Assign(
    targets=[Tuple(
      elts=[
        Name(
          id='test_loss',
          ctx=Store()),
        Name(
          id='test_acc',
          ctx=Store())],
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='model',
          ctx=Load()),
        attr='evaluate',
        ctx=Load()),
      args=[
        Name(
          id='test_images',
          ctx=Load()),
        Name(
          id='test_labels',
          ctx=Load())],
      keywords=[keyword(
        arg='verbose',
        value=Num(n=0))])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Str(s='Time: '),
      BinOp(
        left=Call(
          func=Attribute(
            value=Name(
              id='time',
              ctx=Load()),
            attr='time',
            ctx=Load()),
          args=[],
          keywords=[]),
        op=Sub(),
        right=Name(
          id='time1',
          ctx=Load()))],
    keywords=[])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Str(s='Test loss:'),
      Name(
        id='test_loss',
        ctx=Load())],
    keywords=[])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Str(s='Test accuracy:'),
      Name(
        id='test_acc',
        ctx=Load())],
    keywords=[]))])