Module(body=[
  ImportFrom(
    module='__future__',
    names=[alias(
      name='print_function',
      asname=None)],
    level=0),
  Import(names=[alias(
    name='argparse',
    asname=None)]),
  Import(names=[alias(
    name='torch.nn',
    asname='nn')]),
  Import(names=[alias(
    name='torch.nn.functional',
    asname='F')]),
  Import(names=[alias(
    name='torch.optim',
    asname='optim')]),
  ImportFrom(
    module='torchvision',
    names=[
      alias(
        name='datasets',
        asname=None),
      alias(
        name='transforms',
        asname=None)],
    level=0),
  Import(names=[alias(
    name='torch.utils.data.distributed',
    asname=None)]),
  Import(names=[alias(
    name='horovod.torch',
    asname='hvd')]),
  Assign(
    targets=[Name(
      id='parser',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='argparse',
          ctx=Load()),
        attr='ArgumentParser',
        ctx=Load()),
      args=[],
      keywords=[keyword(
        arg='description',
        value=Str(s='PyTorch MNIST Example'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--batch-size')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='int',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=64)),
      keyword(
        arg='metavar',
        value=Str(s='N')),
      keyword(
        arg='help',
        value=Str(s='input batch size for training (default: 64)'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--test-batch-size')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='int',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=1000)),
      keyword(
        arg='metavar',
        value=Str(s='N')),
      keyword(
        arg='help',
        value=Str(s='input batch size for testing (default: 1000)'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--epochs')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='int',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=10)),
      keyword(
        arg='metavar',
        value=Str(s='N')),
      keyword(
        arg='help',
        value=Str(s='number of epochs to train (default: 10)'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--lr')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='float',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=0.01)),
      keyword(
        arg='metavar',
        value=Str(s='LR')),
      keyword(
        arg='help',
        value=Str(s='learning rate (default: 0.01)'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--momentum')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='float',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=0.5)),
      keyword(
        arg='metavar',
        value=Str(s='M')),
      keyword(
        arg='help',
        value=Str(s='SGD momentum (default: 0.5)'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--no-cuda')],
    keywords=[
      keyword(
        arg='action',
        value=Str(s='store_true')),
      keyword(
        arg='default',
        value=NameConstant(value=False)),
      keyword(
        arg='help',
        value=Str(s='disables CUDA training'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--seed')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='int',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=42)),
      keyword(
        arg='metavar',
        value=Str(s='S')),
      keyword(
        arg='help',
        value=Str(s='random seed (default: 42)'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--log-interval')],
    keywords=[
      keyword(
        arg='type',
        value=Name(
          id='int',
          ctx=Load())),
      keyword(
        arg='default',
        value=Num(n=10)),
      keyword(
        arg='metavar',
        value=Str(s='N')),
      keyword(
        arg='help',
        value=Str(s='how many batches to wait before logging training status'))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='parser',
        ctx=Load()),
      attr='add_argument',
      ctx=Load()),
    args=[Str(s='--fp16-allreduce')],
    keywords=[
      keyword(
        arg='action',
        value=Str(s='store_true')),
      keyword(
        arg='default',
        value=NameConstant(value=False)),
      keyword(
        arg='help',
        value=Str(s='use fp16 compression during allreduce'))])),
  Assign(
    targets=[Name(
      id='args',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='parser',
          ctx=Load()),
        attr='parse_args',
        ctx=Load()),
      args=[],
      keywords=[])),
  Assign(
    targets=[Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='cuda',
      ctx=Store())],
    value=BoolOp(
      op=And(),
      values=[
        UnaryOp(
          op=Not(),
          operand=Attribute(
            value=Name(
              id='args',
              ctx=Load()),
            attr='no_cuda',
            ctx=Load())),
        Call(
          func=Attribute(
            value=Attribute(
              value=Name(
                id='torch',
                ctx=Load()),
              attr='cuda',
              ctx=Load()),
            attr='is_available',
            ctx=Load()),
          args=[],
          keywords=[])])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='hvd',
        ctx=Load()),
      attr='init',
      ctx=Load()),
    args=[],
    keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='torch',
        ctx=Load()),
      attr='manual_seed',
      ctx=Load()),
    args=[Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='seed',
      ctx=Load())],
    keywords=[])),
  If(
    test=Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='cuda',
      ctx=Load()),
    body=[
      Expr(value=Call(
        func=Attribute(
          value=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='cuda',
            ctx=Load()),
          attr='set_device',
          ctx=Load()),
        args=[Call(
          func=Attribute(
            value=Name(
              id='hvd',
              ctx=Load()),
            attr='local_rank',
            ctx=Load()),
          args=[],
          keywords=[])],
        keywords=[])),
      Expr(value=Call(
        func=Attribute(
          value=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='cuda',
            ctx=Load()),
          attr='manual_seed',
          ctx=Load()),
        args=[Attribute(
          value=Name(
            id='args',
            ctx=Load()),
          attr='seed',
          ctx=Load())],
        keywords=[]))],
    orelse=[]),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='torch',
        ctx=Load()),
      attr='set_num_threads',
      ctx=Load()),
    args=[Num(n=1)],
    keywords=[])),
  Assign(
    targets=[Name(
      id='kwargs',
      ctx=Store())],
    value=IfExp(
      test=Attribute(
        value=Name(
          id='args',
          ctx=Load()),
        attr='cuda',
        ctx=Load()),
      body=Dict(
        keys=[
          Str(s='num_workers'),
          Str(s='pin_memory')],
        values=[
          Num(n=1),
          NameConstant(value=True)]),
      orelse=Dict(
        keys=[],
        values=[]))),
  Assign(
    targets=[Name(
      id='train_dataset',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='datasets',
          ctx=Load()),
        attr='MNIST',
        ctx=Load()),
      args=[BinOp(
        left=Str(s='data-%d'),
        op=Mod(),
        right=Call(
          func=Attribute(
            value=Name(
              id='hvd',
              ctx=Load()),
            attr='rank',
            ctx=Load()),
          args=[],
          keywords=[]))],
      keywords=[
        keyword(
          arg='train',
          value=NameConstant(value=True)),
        keyword(
          arg='download',
          value=NameConstant(value=True)),
        keyword(
          arg='transform',
          value=Call(
            func=Attribute(
              value=Name(
                id='transforms',
                ctx=Load()),
              attr='Compose',
              ctx=Load()),
            args=[List(
              elts=[
                Call(
                  func=Attribute(
                    value=Name(
                      id='transforms',
                      ctx=Load()),
                    attr='ToTensor',
                    ctx=Load()),
                  args=[],
                  keywords=[]),
                Call(
                  func=Attribute(
                    value=Name(
                      id='transforms',
                      ctx=Load()),
                    attr='Normalize',
                    ctx=Load()),
                  args=[
                    Tuple(
                      elts=[Num(n=0.1307)],
                      ctx=Load()),
                    Tuple(
                      elts=[Num(n=0.3081)],
                      ctx=Load())],
                  keywords=[])],
              ctx=Load())],
            keywords=[]))])),
  Assign(
    targets=[Name(
      id='train_sampler',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Attribute(
              value=Name(
                id='torch',
                ctx=Load()),
              attr='utils',
              ctx=Load()),
            attr='data',
            ctx=Load()),
          attr='distributed',
          ctx=Load()),
        attr='DistributedSampler',
        ctx=Load()),
      args=[Name(
        id='train_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='num_replicas',
          value=Call(
            func=Attribute(
              value=Name(
                id='hvd',
                ctx=Load()),
              attr='size',
              ctx=Load()),
            args=[],
            keywords=[])),
        keyword(
          arg='rank',
          value=Call(
            func=Attribute(
              value=Name(
                id='hvd',
                ctx=Load()),
              attr='rank',
              ctx=Load()),
            args=[],
            keywords=[]))])),
  Assign(
    targets=[Name(
      id='train_loader',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='utils',
            ctx=Load()),
          attr='data',
          ctx=Load()),
        attr='DataLoader',
        ctx=Load()),
      args=[Name(
        id='train_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='batch_size',
          value=Attribute(
            value=Name(
              id='args',
              ctx=Load()),
            attr='batch_size',
            ctx=Load())),
        keyword(
          arg='sampler',
          value=Name(
            id='train_sampler',
            ctx=Load())),
        keyword(
          arg=None,
          value=Name(
            id='kwargs',
            ctx=Load()))])),
  Assign(
    targets=[Name(
      id='test_dataset',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='datasets',
          ctx=Load()),
        attr='MNIST',
        ctx=Load()),
      args=[BinOp(
        left=Str(s='data-%d'),
        op=Mod(),
        right=Call(
          func=Attribute(
            value=Name(
              id='hvd',
              ctx=Load()),
            attr='rank',
            ctx=Load()),
          args=[],
          keywords=[]))],
      keywords=[
        keyword(
          arg='train',
          value=NameConstant(value=False)),
        keyword(
          arg='transform',
          value=Call(
            func=Attribute(
              value=Name(
                id='transforms',
                ctx=Load()),
              attr='Compose',
              ctx=Load()),
            args=[List(
              elts=[
                Call(
                  func=Attribute(
                    value=Name(
                      id='transforms',
                      ctx=Load()),
                    attr='ToTensor',
                    ctx=Load()),
                  args=[],
                  keywords=[]),
                Call(
                  func=Attribute(
                    value=Name(
                      id='transforms',
                      ctx=Load()),
                    attr='Normalize',
                    ctx=Load()),
                  args=[
                    Tuple(
                      elts=[Num(n=0.1307)],
                      ctx=Load()),
                    Tuple(
                      elts=[Num(n=0.3081)],
                      ctx=Load())],
                  keywords=[])],
              ctx=Load())],
            keywords=[]))])),
  Assign(
    targets=[Name(
      id='test_sampler',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Attribute(
              value=Name(
                id='torch',
                ctx=Load()),
              attr='utils',
              ctx=Load()),
            attr='data',
            ctx=Load()),
          attr='distributed',
          ctx=Load()),
        attr='DistributedSampler',
        ctx=Load()),
      args=[Name(
        id='test_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='num_replicas',
          value=Call(
            func=Attribute(
              value=Name(
                id='hvd',
                ctx=Load()),
              attr='size',
              ctx=Load()),
            args=[],
            keywords=[])),
        keyword(
          arg='rank',
          value=Call(
            func=Attribute(
              value=Name(
                id='hvd',
                ctx=Load()),
              attr='rank',
              ctx=Load()),
            args=[],
            keywords=[]))])),
  Assign(
    targets=[Name(
      id='test_loader',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='utils',
            ctx=Load()),
          attr='data',
          ctx=Load()),
        attr='DataLoader',
        ctx=Load()),
      args=[Name(
        id='test_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='batch_size',
          value=Attribute(
            value=Name(
              id='args',
              ctx=Load()),
            attr='test_batch_size',
            ctx=Load())),
        keyword(
          arg='sampler',
          value=Name(
            id='test_sampler',
            ctx=Load())),
        keyword(
          arg=None,
          value=Name(
            id='kwargs',
            ctx=Load()))])),
  ClassDef(
    name='Net',
    bases=[Attribute(
      value=Name(
        id='nn',
        ctx=Load()),
      attr='Module',
      ctx=Load())],
    keywords=[],
    body=[
      FunctionDef(
        name='__init__',
        args=arguments(
          args=[arg(
            arg='self',
            annotation=None)],
          vararg=None,
          kwonlyargs=[],
          kw_defaults=[],
          kwarg=None,
          defaults=[]),
        body=[
          Expr(value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='super',
                  ctx=Load()),
                args=[
                  Name(
                    id='Net',
                    ctx=Load()),
                  Name(
                    id='self',
                    ctx=Load())],
                keywords=[]),
              attr='__init__',
              ctx=Load()),
            args=[],
            keywords=[])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='conv1',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Conv2d',
                ctx=Load()),
              args=[
                Num(n=1),
                Num(n=10)],
              keywords=[keyword(
                arg='kernel_size',
                value=Num(n=5))])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='conv2',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Conv2d',
                ctx=Load()),
              args=[
                Num(n=10),
                Num(n=20)],
              keywords=[keyword(
                arg='kernel_size',
                value=Num(n=5))])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='conv2_drop',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Dropout2d',
                ctx=Load()),
              args=[],
              keywords=[])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='fc1',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Linear',
                ctx=Load()),
              args=[
                Num(n=320),
                Num(n=50)],
              keywords=[])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='fc2',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Linear',
                ctx=Load()),
              args=[
                Num(n=50),
                Num(n=10)],
              keywords=[]))],
        decorator_list=[],
        returns=None),
      FunctionDef(
        name='forward',
        args=arguments(
          args=[
            arg(
              arg='self',
              annotation=None),
            arg(
              arg='x',
              annotation=None)],
          vararg=None,
          kwonlyargs=[],
          kw_defaults=[],
          kwarg=None,
          defaults=[]),
        body=[
          Assign(
            targets=[Name(
              id='x',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='F',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Call(
                func=Attribute(
                  value=Name(
                    id='F',
                    ctx=Load()),
                  attr='max_pool2d',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='self',
                        ctx=Load()),
                      attr='conv1',
                      ctx=Load()),
                    args=[Name(
                      id='x',
                      ctx=Load())],
                    keywords=[]),
                  Num(n=2)],
                keywords=[])],
              keywords=[])),
          Assign(
            targets=[Name(
              id='x',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='F',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Call(
                func=Attribute(
                  value=Name(
                    id='F',
                    ctx=Load()),
                  attr='max_pool2d',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='self',
                        ctx=Load()),
                      attr='conv2_drop',
                      ctx=Load()),
                    args=[Call(
                      func=Attribute(
                        value=Name(
                          id='self',
                          ctx=Load()),
                        attr='conv2',
                        ctx=Load()),
                      args=[Name(
                        id='x',
                        ctx=Load())],
                      keywords=[])],
                    keywords=[]),
                  Num(n=2)],
                keywords=[])],
              keywords=[])),
          Assign(
            targets=[Name(
              id='x',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='x',
                  ctx=Load()),
                attr='view',
                ctx=Load()),
              args=[
                UnaryOp(
                  op=USub(),
                  operand=Num(n=1)),
                Num(n=320)],
              keywords=[])),
          Assign(
            targets=[Name(
              id='x',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='F',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Call(
                func=Attribute(
                  value=Name(
                    id='self',
                    ctx=Load()),
                  attr='fc1',
                  ctx=Load()),
                args=[Name(
                  id='x',
                  ctx=Load())],
                keywords=[])],
              keywords=[])),
          Assign(
            targets=[Name(
              id='x',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='F',
                  ctx=Load()),
                attr='dropout',
                ctx=Load()),
              args=[Name(
                id='x',
                ctx=Load())],
              keywords=[keyword(
                arg='training',
                value=Attribute(
                  value=Name(
                    id='self',
                    ctx=Load()),
                  attr='training',
                  ctx=Load()))])),
          Assign(
            targets=[Name(
              id='x',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='fc2',
                ctx=Load()),
              args=[Name(
                id='x',
                ctx=Load())],
              keywords=[])),
          Return(value=Call(
            func=Attribute(
              value=Name(
                id='F',
                ctx=Load()),
              attr='log_softmax',
              ctx=Load()),
            args=[Name(
              id='x',
              ctx=Load())],
            keywords=[]))],
        decorator_list=[],
        returns=None)],
    decorator_list=[]),
  Assign(
    targets=[Name(
      id='model',
      ctx=Store())],
    value=Call(
      func=Name(
        id='Net',
        ctx=Load()),
      args=[],
      keywords=[])),
  If(
    test=Attribute(
      value=Name(
        id='args',
        ctx=Load()),
      attr='cuda',
      ctx=Load()),
    body=[Expr(value=Call(
      func=Attribute(
        value=Name(
          id='model',
          ctx=Load()),
        attr='cuda',
        ctx=Load()),
      args=[],
      keywords=[]))],
    orelse=[]),
  Assign(
    targets=[Name(
      id='optimizer',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='optim',
          ctx=Load()),
        attr='SGD',
        ctx=Load()),
      args=[Call(
        func=Attribute(
          value=Name(
            id='model',
            ctx=Load()),
          attr='parameters',
          ctx=Load()),
        args=[],
        keywords=[])],
      keywords=[
        keyword(
          arg='lr',
          value=BinOp(
            left=Attribute(
              value=Name(
                id='args',
                ctx=Load()),
              attr='lr',
              ctx=Load()),
            op=Mult(),
            right=Call(
              func=Attribute(
                value=Name(
                  id='hvd',
                  ctx=Load()),
                attr='size',
                ctx=Load()),
              args=[],
              keywords=[]))),
        keyword(
          arg='momentum',
          value=Attribute(
            value=Name(
              id='args',
              ctx=Load()),
            attr='momentum',
            ctx=Load()))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='hvd',
        ctx=Load()),
      attr='broadcast_parameters',
      ctx=Load()),
    args=[Call(
      func=Attribute(
        value=Name(
          id='model',
          ctx=Load()),
        attr='state_dict',
        ctx=Load()),
      args=[],
      keywords=[])],
    keywords=[keyword(
      arg='root_rank',
      value=Num(n=0))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='hvd',
        ctx=Load()),
      attr='broadcast_optimizer_state',
      ctx=Load()),
    args=[Name(
      id='optimizer',
      ctx=Load())],
    keywords=[keyword(
      arg='root_rank',
      value=Num(n=0))])),
  Assign(
    targets=[Name(
      id='compression',
      ctx=Store())],
    value=IfExp(
      test=Attribute(
        value=Name(
          id='args',
          ctx=Load()),
        attr='fp16_allreduce',
        ctx=Load()),
      body=Attribute(
        value=Attribute(
          value=Name(
            id='hvd',
            ctx=Load()),
          attr='Compression',
          ctx=Load()),
        attr='fp16',
        ctx=Load()),
      orelse=Attribute(
        value=Attribute(
          value=Name(
            id='hvd',
            ctx=Load()),
          attr='Compression',
          ctx=Load()),
        attr='none',
        ctx=Load()))),
  Assign(
    targets=[Name(
      id='optimizer',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='hvd',
          ctx=Load()),
        attr='DistributedOptimizer',
        ctx=Load()),
      args=[Name(
        id='optimizer',
        ctx=Load())],
      keywords=[
        keyword(
          arg='named_parameters',
          value=Call(
            func=Attribute(
              value=Name(
                id='model',
                ctx=Load()),
              attr='named_parameters',
              ctx=Load()),
            args=[],
            keywords=[])),
        keyword(
          arg='compression',
          value=Name(
            id='compression',
            ctx=Load()))])),
  FunctionDef(
    name='train',
    args=arguments(
      args=[arg(
        arg='epoch',
        annotation=None)],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='model',
            ctx=Load()),
          attr='train',
          ctx=Load()),
        args=[],
        keywords=[])),
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='train_sampler',
            ctx=Load()),
          attr='set_epoch',
          ctx=Load()),
        args=[Name(
          id='epoch',
          ctx=Load())],
        keywords=[])),
      For(
        target=Tuple(
          elts=[
            Name(
              id='batch_idx',
              ctx=Store()),
            Tuple(
              elts=[
                Name(
                  id='data',
                  ctx=Store()),
                Name(
                  id='target',
                  ctx=Store())],
              ctx=Store())],
          ctx=Store()),
        iter=Call(
          func=Name(
            id='enumerate',
            ctx=Load()),
          args=[Name(
            id='train_loader',
            ctx=Load())],
          keywords=[]),
        body=[
          If(
            test=Attribute(
              value=Name(
                id='args',
                ctx=Load()),
              attr='cuda',
              ctx=Load()),
            body=[Assign(
              targets=[Tuple(
                elts=[
                  Name(
                    id='data',
                    ctx=Store()),
                  Name(
                    id='target',
                    ctx=Store())],
                ctx=Store())],
              value=Tuple(
                elts=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='data',
                        ctx=Load()),
                      attr='cuda',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='target',
                        ctx=Load()),
                      attr='cuda',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                ctx=Load()))],
            orelse=[]),
          Expr(value=Call(
            func=Attribute(
              value=Name(
                id='optimizer',
                ctx=Load()),
              attr='zero_grad',
              ctx=Load()),
            args=[],
            keywords=[])),
          Assign(
            targets=[Name(
              id='output',
              ctx=Store())],
            value=Call(
              func=Name(
                id='model',
                ctx=Load()),
              args=[Name(
                id='data',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='loss',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='F',
                  ctx=Load()),
                attr='nll_loss',
                ctx=Load()),
              args=[
                Name(
                  id='output',
                  ctx=Load()),
                Name(
                  id='target',
                  ctx=Load())],
              keywords=[])),
          Expr(value=Call(
            func=Attribute(
              value=Name(
                id='loss',
                ctx=Load()),
              attr='backward',
              ctx=Load()),
            args=[],
            keywords=[])),
          Expr(value=Call(
            func=Attribute(
              value=Name(
                id='optimizer',
                ctx=Load()),
              attr='step',
              ctx=Load()),
            args=[],
            keywords=[])),
          If(
            test=Compare(
              left=BinOp(
                left=Name(
                  id='batch_idx',
                  ctx=Load()),
                op=Mod(),
                right=Attribute(
                  value=Name(
                    id='args',
                    ctx=Load()),
                  attr='log_interval',
                  ctx=Load())),
              ops=[Eq()],
              comparators=[Num(n=0)]),
            body=[Expr(value=Call(
              func=Name(
                id='print',
                ctx=Load()),
              args=[Call(
                func=Attribute(
                  value=Str(s='Train Epoch: {} [{}/{} ({:.0f}%)]\tLoss: {:.6f}'),
                  attr='format',
                  ctx=Load()),
                args=[
                  Name(
                    id='epoch',
                    ctx=Load()),
                  BinOp(
                    left=Name(
                      id='batch_idx',
                      ctx=Load()),
                    op=Mult(),
                    right=Call(
                      func=Name(
                        id='len',
                        ctx=Load()),
                      args=[Name(
                        id='data',
                        ctx=Load())],
                      keywords=[])),
                  Call(
                    func=Name(
                      id='len',
                      ctx=Load()),
                    args=[Name(
                      id='train_sampler',
                      ctx=Load())],
                    keywords=[]),
                  BinOp(
                    left=BinOp(
                      left=Num(n=100.0),
                      op=Mult(),
                      right=Name(
                        id='batch_idx',
                        ctx=Load())),
                    op=Div(),
                    right=Call(
                      func=Name(
                        id='len',
                        ctx=Load()),
                      args=[Name(
                        id='train_loader',
                        ctx=Load())],
                      keywords=[])),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='loss',
                        ctx=Load()),
                      attr='item',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                keywords=[])],
              keywords=[]))],
            orelse=[])],
        orelse=[])],
    decorator_list=[],
    returns=None),
  FunctionDef(
    name='metric_average',
    args=arguments(
      args=[
        arg(
          arg='val',
          annotation=None),
        arg(
          arg='name',
          annotation=None)],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Assign(
        targets=[Name(
          id='tensor',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='torch',
              ctx=Load()),
            attr='tensor',
            ctx=Load()),
          args=[Name(
            id='val',
            ctx=Load())],
          keywords=[])),
      Assign(
        targets=[Name(
          id='avg_tensor',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Name(
              id='hvd',
              ctx=Load()),
            attr='allreduce',
            ctx=Load()),
          args=[Name(
            id='tensor',
            ctx=Load())],
          keywords=[keyword(
            arg='name',
            value=Name(
              id='name',
              ctx=Load()))])),
      Return(value=Call(
        func=Attribute(
          value=Name(
            id='avg_tensor',
            ctx=Load()),
          attr='item',
          ctx=Load()),
        args=[],
        keywords=[]))],
    decorator_list=[],
    returns=None),
  FunctionDef(
    name='test',
    args=arguments(
      args=[],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Expr(value=Call(
        func=Attribute(
          value=Name(
            id='model',
            ctx=Load()),
          attr='eval',
          ctx=Load()),
        args=[],
        keywords=[])),
      Assign(
        targets=[Name(
          id='test_loss',
          ctx=Store())],
        value=Num(n=0.0)),
      Assign(
        targets=[Name(
          id='test_accuracy',
          ctx=Store())],
        value=Num(n=0.0)),
      For(
        target=Tuple(
          elts=[
            Name(
              id='data',
              ctx=Store()),
            Name(
              id='target',
              ctx=Store())],
          ctx=Store()),
        iter=Name(
          id='test_loader',
          ctx=Load()),
        body=[
          If(
            test=Attribute(
              value=Name(
                id='args',
                ctx=Load()),
              attr='cuda',
              ctx=Load()),
            body=[Assign(
              targets=[Tuple(
                elts=[
                  Name(
                    id='data',
                    ctx=Store()),
                  Name(
                    id='target',
                    ctx=Store())],
                ctx=Store())],
              value=Tuple(
                elts=[
                  Call(
                    func=Attribute(
                      value=Name(
                        id='data',
                        ctx=Load()),
                      attr='cuda',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  Call(
                    func=Attribute(
                      value=Name(
                        id='target',
                        ctx=Load()),
                      attr='cuda',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                ctx=Load()))],
            orelse=[]),
          Assign(
            targets=[Name(
              id='output',
              ctx=Store())],
            value=Call(
              func=Name(
                id='model',
                ctx=Load()),
              args=[Name(
                id='data',
                ctx=Load())],
              keywords=[])),
          AugAssign(
            target=Name(
              id='test_loss',
              ctx=Store()),
            op=Add(),
            value=Call(
              func=Attribute(
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='F',
                      ctx=Load()),
                    attr='nll_loss',
                    ctx=Load()),
                  args=[
                    Name(
                      id='output',
                      ctx=Load()),
                    Name(
                      id='target',
                      ctx=Load())],
                  keywords=[keyword(
                    arg='size_average',
                    value=NameConstant(value=False))]),
                attr='item',
                ctx=Load()),
              args=[],
              keywords=[])),
          Assign(
            targets=[Name(
              id='pred',
              ctx=Store())],
            value=Subscript(
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(
                      id='output',
                      ctx=Load()),
                    attr='data',
                    ctx=Load()),
                  attr='max',
                  ctx=Load()),
                args=[Num(n=1)],
                keywords=[keyword(
                  arg='keepdim',
                  value=NameConstant(value=True))]),
              slice=Index(value=Num(n=1)),
              ctx=Load())),
          AugAssign(
            target=Name(
              id='test_accuracy',
              ctx=Store()),
            op=Add(),
            value=Call(
              func=Attribute(
                value=Call(
                  func=Attribute(
                    value=Call(
                      func=Attribute(
                        value=Call(
                          func=Attribute(
                            value=Name(
                              id='pred',
                              ctx=Load()),
                            attr='eq',
                            ctx=Load()),
                          args=[Call(
                            func=Attribute(
                              value=Attribute(
                                value=Name(
                                  id='target',
                                  ctx=Load()),
                                attr='data',
                                ctx=Load()),
                              attr='view_as',
                              ctx=Load()),
                            args=[Name(
                              id='pred',
                              ctx=Load())],
                            keywords=[])],
                          keywords=[]),
                        attr='cpu',
                        ctx=Load()),
                      args=[],
                      keywords=[]),
                    attr='float',
                    ctx=Load()),
                  args=[],
                  keywords=[]),
                attr='sum',
                ctx=Load()),
              args=[],
              keywords=[]))],
        orelse=[]),
      AugAssign(
        target=Name(
          id='test_loss',
          ctx=Store()),
        op=Div(),
        value=Call(
          func=Name(
            id='len',
            ctx=Load()),
          args=[Name(
            id='test_sampler',
            ctx=Load())],
          keywords=[])),
      AugAssign(
        target=Name(
          id='test_accuracy',
          ctx=Store()),
        op=Div(),
        value=Call(
          func=Name(
            id='len',
            ctx=Load()),
          args=[Name(
            id='test_sampler',
            ctx=Load())],
          keywords=[])),
      Assign(
        targets=[Name(
          id='test_loss',
          ctx=Store())],
        value=Call(
          func=Name(
            id='metric_average',
            ctx=Load()),
          args=[
            Name(
              id='test_loss',
              ctx=Load()),
            Str(s='avg_loss')],
          keywords=[])),
      Assign(
        targets=[Name(
          id='test_accuracy',
          ctx=Store())],
        value=Call(
          func=Name(
            id='metric_average',
            ctx=Load()),
          args=[
            Name(
              id='test_accuracy',
              ctx=Load()),
            Str(s='avg_accuracy')],
          keywords=[])),
      If(
        test=Compare(
          left=Call(
            func=Attribute(
              value=Name(
                id='hvd',
                ctx=Load()),
              attr='rank',
              ctx=Load()),
            args=[],
            keywords=[]),
          ops=[Eq()],
          comparators=[Num(n=0)]),
        body=[Expr(value=Call(
          func=Name(
            id='print',
            ctx=Load()),
          args=[Call(
            func=Attribute(
              value=Str(s='\nTest set: Average loss: {:.4f}, Accuracy: {:.2f}%\n'),
              attr='format',
              ctx=Load()),
            args=[
              Name(
                id='test_loss',
                ctx=Load()),
              BinOp(
                left=Num(n=100.0),
                op=Mult(),
                right=Name(
                  id='test_accuracy',
                  ctx=Load()))],
            keywords=[])],
          keywords=[]))],
        orelse=[])],
    decorator_list=[],
    returns=None),
  For(
    target=Name(
      id='epoch',
      ctx=Store()),
    iter=Call(
      func=Name(
        id='range',
        ctx=Load()),
      args=[
        Num(n=1),
        BinOp(
          left=Attribute(
            value=Name(
              id='args',
              ctx=Load()),
            attr='epochs',
            ctx=Load()),
          op=Add(),
          right=Num(n=1))],
      keywords=[]),
    body=[
      Expr(value=Call(
        func=Name(
          id='train',
          ctx=Load()),
        args=[Name(
          id='epoch',
          ctx=Load())],
        keywords=[])),
      Expr(value=Call(
        func=Name(
          id='test',
          ctx=Load()),
        args=[],
        keywords=[]))],
    orelse=[])])