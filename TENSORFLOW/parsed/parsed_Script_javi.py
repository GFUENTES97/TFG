Module(body=[
  Import(names=[alias(
    name='tensorflow',
    asname='tf')]),
  ImportFrom(
    module='tensorflow.keras',
    names=[alias(
      name='models',
      asname=None)],
    level=0),
  ImportFrom(
    module='tensorflow.keras',
    names=[alias(
      name='layers',
      asname=None)],
    level=0),
  ImportFrom(
    module='tensorflow.keras',
    names=[alias(
      name='optimizers',
      asname=None)],
    level=0),
  ImportFrom(
    module='tensorflow.keras.models',
    names=[
      alias(
        name='Sequential',
        asname=None),
      alias(
        name='load_model',
        asname=None)],
    level=0),
  Import(names=[alias(
    name='os',
    asname=None)]),
  Import(names=[alias(
    name='glob',
    asname=None)]),
  Import(names=[alias(
    name='shutil',
    asname=None)]),
  Import(names=[alias(
    name='sys',
    asname=None)]),
  Import(names=[alias(
    name='numpy',
    asname='np')]),
  ImportFrom(
    module='skimage.io',
    names=[alias(
      name='imread',
      asname=None)],
    level=0),
  Import(names=[alias(
    name='matplotlib.pyplot',
    asname='plt')]),
  Import(names=[alias(
    name='IPython.display',
    asname='display')]),
  ImportFrom(
    module='IPython.display',
    names=[alias(
      name='Image',
      asname=None)],
    level=0),
  ImportFrom(
    module='tensorflow.keras.layers',
    names=[
      alias(
        name='Dense',
        asname=None),
      alias(
        name='Input',
        asname=None)],
    level=0),
  ImportFrom(
    module='keras.utils',
    names=[alias(
      name='plot_model',
      asname=None)],
    level=0),
  ImportFrom(
    module='IPython.display',
    names=[alias(
      name='SVG',
      asname=None)],
    level=0),
  ImportFrom(
    module='keras.utils.vis_utils',
    names=[alias(
      name='model_to_dot',
      asname=None)],
    level=0),
  ImportFrom(
    module='efficientnet.tfkeras',
    names=[
      alias(
        name='center_crop_and_resize',
        asname=None),
      alias(
        name='preprocess_input',
        asname=None)],
    level=0),
  ImportFrom(
    module='efficientnet.tfkeras',
    names=[
      alias(
        name='EfficientNetB7',
        asname=None),
      alias(
        name='EfficientNetB0',
        asname=None)],
    level=0),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='tf',
        ctx=Load()),
      attr='enable_eager_execution',
      ctx=Load()),
    args=[],
    keywords=[])),
  Assign(
    targets=[Name(
      id='epochs',
      ctx=Store())],
    value=Num(n=20)),
  Assign(
    targets=[Name(
      id='steps_per_epoch',
      ctx=Store())],
    value=Num(n=2)),
  Assign(
    targets=[Name(
      id='batch_size',
      ctx=Store())],
    value=Num(n=32)),
  Assign(
    targets=[Name(
      id='num_classes',
      ctx=Store())],
    value=Num(n=10)),
  Assign(
    targets=[Name(
      id='full_model',
      ctx=Store())],
    value=Str(s='image')),
  Assign(
    targets=[Name(
      id='image_model',
      ctx=Store())],
    value=Str(s='efficientnet')),
  Assign(
    targets=[Name(
      id='image_training_type',
      ctx=Store())],
    value=Str(s='finetuning')),
  Assign(
    targets=[Name(
      id='text_model',
      ctx=Store())],
    value=Str(s='cnn')),
  Assign(
    targets=[Name(
      id='combined_embeddings',
      ctx=Store())],
    value=Str(s='stack')),
  Assign(
    targets=[Name(
      id='learning_rate',
      ctx=Store())],
    value=Num(n=0.005)),
  Assign(
    targets=[Name(
      id='width',
      ctx=Store())],
    value=Num(n=150)),
  Assign(
    targets=[Name(
      id='height',
      ctx=Store())],
    value=Num(n=150)),
  Assign(
    targets=[Name(
      id='input_shape',
      ctx=Store())],
    value=Tuple(
      elts=[
        Name(
          id='height',
          ctx=Load()),
        Name(
          id='width',
          ctx=Load()),
        Num(n=3)],
      ctx=Load())),
  Assign(
    targets=[Name(
      id='input_size',
      ctx=Store())],
    value=Tuple(
      elts=[
        Num(n=224),
        Num(n=224),
        Num(n=3)],
      ctx=Load())),
  Assign(
    targets=[Name(
      id='train_tfrecord',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Name(
            id='tf',
            ctx=Load()),
          attr='data',
          ctx=Load()),
        attr='TFRecordDataset',
        ctx=Load()),
      args=[],
      keywords=[keyword(
        arg='filenames',
        value=List(
          elts=[Str(s='tfrecords/train.tfrecords')],
          ctx=Load()))])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[Name(
      id='train_tfrecord',
      ctx=Load())],
    keywords=[])),
  Assign(
    targets=[Name(
      id='val_tfrecord',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Name(
            id='tf',
            ctx=Load()),
          attr='data',
          ctx=Load()),
        attr='TFRecordDataset',
        ctx=Load()),
      args=[],
      keywords=[keyword(
        arg='filenames',
        value=List(
          elts=[Str(s='tfrecords/val.tfrecords')],
          ctx=Load()))])),
  Assign(
    targets=[Name(
      id='test_tfrecord',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Name(
            id='tf',
            ctx=Load()),
          attr='data',
          ctx=Load()),
        attr='TFRecordDataset',
        ctx=Load()),
      args=[],
      keywords=[keyword(
        arg='filenames',
        value=List(
          elts=[Str(s='tfrecords/test.tfrecords')],
          ctx=Load()))])),
  FunctionDef(
    name='read_tfrecord',
    args=arguments(
      args=[arg(
        arg='serialized_example',
        annotation=None)],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Assign(
        targets=[Name(
          id='feature_description',
          ctx=Store())],
        value=Dict(
          keys=[
            Str(s='image_raw'),
            Str(s='label')],
          values=[
            Call(
              func=Attribute(
                value=Attribute(
                  value=Name(
                    id='tf',
                    ctx=Load()),
                  attr='io',
                  ctx=Load()),
                attr='FixedLenFeature',
                ctx=Load()),
              args=[
                List(
                  elts=[],
                  ctx=Load()),
                Attribute(
                  value=Name(
                    id='tf',
                    ctx=Load()),
                  attr='string',
                  ctx=Load())],
              keywords=[]),
            Call(
              func=Attribute(
                value=Attribute(
                  value=Name(
                    id='tf',
                    ctx=Load()),
                  attr='io',
                  ctx=Load()),
                attr='FixedLenFeature',
                ctx=Load()),
              args=[
                List(
                  elts=[],
                  ctx=Load()),
                Attribute(
                  value=Name(
                    id='tf',
                    ctx=Load()),
                  attr='int64',
                  ctx=Load())],
              keywords=[])])),
      Assign(
        targets=[Name(
          id='example',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Attribute(
              value=Name(
                id='tf',
                ctx=Load()),
              attr='io',
              ctx=Load()),
            attr='parse_single_example',
            ctx=Load()),
          args=[
            Name(
              id='serialized_example',
              ctx=Load()),
            Name(
              id='feature_description',
              ctx=Load())],
          keywords=[])),
      Assign(
        targets=[Name(
          id='input_2',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Attribute(
              value=Name(
                id='tf',
                ctx=Load()),
              attr='image',
              ctx=Load()),
            attr='decode_png',
            ctx=Load()),
          args=[Subscript(
            value=Name(
              id='example',
              ctx=Load()),
            slice=Index(value=Str(s='image_raw')),
            ctx=Load())],
          keywords=[
            keyword(
              arg='channels',
              value=Num(n=3)),
            keyword(
              arg='dtype',
              value=Attribute(
                value=Attribute(
                  value=Name(
                    id='tf',
                    ctx=Load()),
                  attr='dtypes',
                  ctx=Load()),
                attr='uint8',
                ctx=Load()))])),
      Assign(
        targets=[Name(
          id='input_2',
          ctx=Store())],
        value=Call(
          func=Attribute(
            value=Attribute(
              value=Name(
                id='tf',
                ctx=Load()),
              attr='image',
              ctx=Load()),
            attr='resize',
            ctx=Load()),
          args=[
            Name(
              id='input_2',
              ctx=Load()),
            List(
              elts=[
                Num(n=600),
                Num(n=600)],
              ctx=Load())],
          keywords=[])),
      Return(value=Tuple(
        elts=[
          Name(
            id='input_2',
            ctx=Load()),
          Subscript(
            value=Name(
              id='example',
              ctx=Load()),
            slice=Index(value=Str(s='label')),
            ctx=Load())],
        ctx=Load()))],
    decorator_list=[],
    returns=None),
  Assign(
    targets=[Name(
      id='train_parsed_dataset',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='train_tfrecord',
          ctx=Load()),
        attr='map',
        ctx=Load()),
      args=[Name(
        id='read_tfrecord',
        ctx=Load())],
      keywords=[])),
  Assign(
    targets=[Name(
      id='val_parsed_dataset',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='val_tfrecord',
          ctx=Load()),
        attr='map',
        ctx=Load()),
      args=[Name(
        id='read_tfrecord',
        ctx=Load())],
      keywords=[])),
  Assign(
    targets=[Name(
      id='test_parsed_dataset',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='test_tfrecord',
          ctx=Load()),
        attr='map',
        ctx=Load()),
      args=[Name(
        id='read_tfrecord',
        ctx=Load())],
      keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Attribute(
        value=Attribute(
          value=Name(
            id='tf',
            ctx=Load()),
          attr='keras',
          ctx=Load()),
        attr='backend',
        ctx=Load()),
      attr='clear_session',
      ctx=Load()),
    args=[],
    keywords=[])),
  Assign(
    targets=[Name(
      id='baseModel',
      ctx=Store())],
    value=Call(
      func=Name(
        id='EfficientNetB7',
        ctx=Load()),
      args=[],
      keywords=[
        keyword(
          arg='weights',
          value=Str(s='imagenet')),
        keyword(
          arg='include_top',
          value=NameConstant(value=True))])),
  Assign(
    targets=[Name(
      id='probs',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Attribute(
          value=Name(
            id='baseModel',
            ctx=Load()),
          attr='layers',
          ctx=Load()),
        attr='pop',
        ctx=Load()),
      args=[],
      keywords=[])),
  Assign(
    targets=[Name(
      id='top_droput',
      ctx=Store())],
    value=Attribute(
      value=Name(
        id='probs',
        ctx=Load()),
      attr='input',
      ctx=Load())),
  Assign(
    targets=[Name(
      id='headModel',
      ctx=Store())],
    value=Call(
      func=Call(
        func=Attribute(
          value=Name(
            id='layers',
            ctx=Load()),
          attr='Dense',
          ctx=Load()),
        args=[Num(n=10)],
        keywords=[keyword(
          arg='activation',
          value=Str(s='softmax'))]),
      args=[Name(
        id='top_droput',
        ctx=Load())],
      keywords=[])),
  Assign(
    targets=[Name(
      id='model',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='models',
          ctx=Load()),
        attr='Model',
        ctx=Load()),
      args=[],
      keywords=[
        keyword(
          arg='inputs',
          value=Attribute(
            value=Name(
              id='baseModel',
              ctx=Load()),
            attr='input',
            ctx=Load())),
        keyword(
          arg='outputs',
          value=Name(
            id='headModel',
            ctx=Load()))])),
  Assign(
    targets=[Name(
      id='SGD',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='optimizers',
          ctx=Load()),
        attr='SGD',
        ctx=Load()),
      args=[],
      keywords=[
        keyword(
          arg='lr',
          value=Num(n=0.01)),
        keyword(
          arg='decay',
          value=Num(n=4e-05)),
        keyword(
          arg='momentum',
          value=Num(n=0.9))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='compile',
      ctx=Load()),
    args=[],
    keywords=[
      keyword(
        arg='loss',
        value=Str(s='sparse_categorical_crossentropy')),
      keyword(
        arg='optimizer',
        value=Name(
          id='SGD',
          ctx=Load())),
      keyword(
        arg='metrics',
        value=List(
          elts=[Str(s='accuracy')],
          ctx=Load()))])),
  Assign(
    targets=[Name(
      id='train_dataset',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Call(
          func=Attribute(
            value=Name(
              id='train_parsed_dataset',
              ctx=Load()),
            attr='batch',
            ctx=Load()),
          args=[Num(n=2)],
          keywords=[]),
        attr='repeat',
        ctx=Load()),
      args=[],
      keywords=[])),
  Assign(
    targets=[Name(
      id='val_dataset',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Call(
          func=Attribute(
            value=Name(
              id='val_parsed_dataset',
              ctx=Load()),
            attr='batch',
            ctx=Load()),
          args=[Num(n=2)],
          keywords=[]),
        attr='repeat',
        ctx=Load()),
      args=[],
      keywords=[])),
  Assign(
    targets=[Name(
      id='test_dataset',
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Call(
          func=Attribute(
            value=Name(
              id='test_parsed_dataset',
              ctx=Load()),
            attr='batch',
            ctx=Load()),
          args=[Num(n=2)],
          keywords=[]),
        attr='repeat',
        ctx=Load()),
      args=[],
      keywords=[])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='fit',
      ctx=Load()),
    args=[Name(
      id='train_dataset',
      ctx=Load())],
    keywords=[
      keyword(
        arg='epochs',
        value=Name(
          id='epochs',
          ctx=Load())),
      keyword(
        arg='steps_per_epoch',
        value=Num(n=400)),
      keyword(
        arg='validation_data',
        value=Name(
          id='val_dataset',
          ctx=Load())),
      keyword(
        arg='validation_steps',
        value=Num(n=100)),
      keyword(
        arg='verbose',
        value=Num(n=1))])),
  Expr(value=Call(
    func=Attribute(
      value=Name(
        id='model',
        ctx=Load()),
      attr='save',
      ctx=Load()),
    args=[Str(s='saved_model.h5')],
    keywords=[])),
  Assign(
    targets=[Tuple(
      elts=[
        Name(
          id='test_loss',
          ctx=Store()),
        Name(
          id='test_acc',
          ctx=Store())],
      ctx=Store())],
    value=Call(
      func=Attribute(
        value=Name(
          id='model',
          ctx=Load()),
        attr='evaluate',
        ctx=Load()),
      args=[Name(
        id='test_dataset',
        ctx=Load())],
      keywords=[
        keyword(
          arg='verbose',
          value=Num(n=0)),
        keyword(
          arg='steps',
          value=Num(n=1241))])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Str(s='Test loss ='),
      Name(
        id='test_loss',
        ctx=Load())],
    keywords=[])),
  Expr(value=Call(
    func=Name(
      id='print',
      ctx=Load()),
    args=[
      Str(s='Test acc ='),
      Name(
        id='test_acc',
        ctx=Load())],
    keywords=[]))])